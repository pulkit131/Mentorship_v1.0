generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum PlanType {
  BASIC
  BEGINNER_TECHY
  PLACEMENT_FOCUSED
}

enum Role {
  USER
  MENTOR
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String   @unique
  profileImage String?
  role         Role     @default(USER)
  planType     PlanType @default(BASIC)
  planPrice    Int      @default(0)
  freeSessions Int      @default(4)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Session relationships
  sessions       Session[] @relation("UserSessions")
  mentorSessions Session[] @relation("MentorSessions")

  // Mentorship assignment relationships
  assignedAsMentor  MentorshipAssignment[] @relation("AssignedMentor")
  assignedAsStudent MentorshipAssignment[] @relation("AssignedStudent")

  // Waitlist
  waitlistEntries WaitlistEntry[]
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  mentorId  String   @db.ObjectId
  timeSlot  DateTime
  status    String   @default("pending")
  createdAt DateTime @default(now())

  user   User @relation("UserSessions", fields: [userId], references: [id])
  mentor User @relation("MentorSessions", fields: [mentorId], references: [id])
}

model Plan {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  price       Float    @default(0)
  features    String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MentorshipAssignment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  studentId String   @db.ObjectId
  mentorId  String   @db.ObjectId
  createdAt DateTime @default(now())

  student User @relation("AssignedStudent", fields: [studentId], references: [id])
  mentor  User @relation("AssignedMentor", fields: [mentorId], references: [id])
}

model WaitlistEntry {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}
